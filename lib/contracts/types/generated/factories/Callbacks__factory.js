"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Callbacks__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "tradeValueStable",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "feeValueStable",
                type: "uint256",
            },
        ],
        name: "BorrowingFeeCharged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "enum ITradingStorage.LimitOrder",
                name: "orderType",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "enum TradingCallbacks.CancelReason",
                name: "cancelReason",
                type: "uint8",
            },
        ],
        name: "BotOrderCanceled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "newValue",
                type: "uint256",
            },
        ],
        name: "CanExecuteTimeoutUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "limitIndex",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSizeStable",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "openPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct ITradingStorage.Trade",
                name: "t",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "enum ITradingStorage.LimitOrder",
                name: "orderType",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "price",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "priceImpactP",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "positionSizeStable",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "int256",
                name: "percentProfit",
                type: "int256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "stableSentToTrader",
                type: "uint256",
            },
        ],
        name: "CloseLimitExecuted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSizeStable",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "openPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct ITradingStorage.Trade",
                name: "t",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "open",
                type: "bool",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "price",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "priceImpactP",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "positionSizeStable",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "int256",
                name: "percentProfit",
                type: "int256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "stableSentToTrader",
                type: "uint256",
            },
        ],
        name: "CloseMarketExecuted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "valueStable",
                type: "uint256",
            },
        ],
        name: "DevGovRefFeeCharged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bool",
                name: "done",
                type: "bool",
            },
        ],
        name: "Done",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "enum TradingCallbacks.CancelReason",
                name: "cancelReason",
                type: "uint8",
            },
        ],
        name: "MarketCloseCanceled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "enum TradingCallbacks.CancelReason",
                name: "cancelReason",
                type: "uint8",
            },
        ],
        name: "MarketOpenCanceled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "limitIndex",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSizeStable",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "openPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct ITradingStorage.Trade",
                name: "t",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "enum ITradingStorage.LimitOrder",
                name: "orderType",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "price",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "priceImpactP",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "positionSizeStable",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "int256",
                name: "percentProfit",
                type: "int256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "stableSentToTrader",
                type: "uint256",
            },
        ],
        name: "OpenLimitExecuted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "limitIndex",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSizeStable",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "openPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct ITradingStorage.Trade",
                name: "t",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "enum ITradingStorage.LimitOrder",
                name: "orderType",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "price",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "priceImpactP",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "positionSizeStable",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "int256",
                name: "percentProfit",
                type: "int256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "stableSentToTrader",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "activeId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "team",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "enum IFoxifyAffiliation.Level",
                                name: "level",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes32",
                                name: "randomValue",
                                type: "bytes32",
                            },
                            {
                                internalType: "uint256",
                                name: "timestamp",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct IFoxifyAffiliation.NFTData",
                        name: "nftData",
                        type: "tuple",
                    },
                ],
                indexed: false,
                internalType: "struct TradingCallbacks.AffiliationUserData",
                name: "affiliationInfo",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "referralTeamID",
                type: "uint256",
            },
        ],
        name: "OpenLimitExecutedWithAffiliationReferral",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSizeStable",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "openPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct ITradingStorage.Trade",
                name: "t",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "open",
                type: "bool",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "price",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "priceImpactP",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "positionSizeStable",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "int256",
                name: "percentProfit",
                type: "int256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "stableSentToTrader",
                type: "uint256",
            },
        ],
        name: "OpenMarketExecuted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSizeStable",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "openPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct ITradingStorage.Trade",
                name: "t",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "open",
                type: "bool",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "price",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "priceImpactP",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "positionSizeStable",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "int256",
                name: "percentProfit",
                type: "int256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "stableSentToTrader",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "activeId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "team",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "enum IFoxifyAffiliation.Level",
                                name: "level",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes32",
                                name: "randomValue",
                                type: "bytes32",
                            },
                            {
                                internalType: "uint256",
                                name: "timestamp",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct IFoxifyAffiliation.NFTData",
                        name: "nftData",
                        type: "tuple",
                    },
                ],
                indexed: false,
                internalType: "struct TradingCallbacks.AffiliationUserData",
                name: "affiliationInfo",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "referralTeamID",
                type: "uint256",
            },
        ],
        name: "OpenMarketExecutedWithAffiliationReferral",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "valueStable",
                type: "uint256",
            },
        ],
        name: "OrderExecutionFeeCharged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "maxLeverage",
                type: "uint256",
            },
        ],
        name: "PairMaxLeverageUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bool",
                name: "paused",
                type: "bool",
            },
        ],
        name: "Pause",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "enum TradingCallbacks.CancelReason",
                name: "cancelReason",
                type: "uint8",
            },
        ],
        name: "SlCanceled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "orderId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "newSl",
                type: "uint256",
            },
        ],
        name: "SlUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "valueStable",
                type: "uint256",
            },
        ],
        name: "StableWorkPoolFeeCharged",
        type: "event",
    },
    {
        inputs: [],
        name: "affiliation",
        outputs: [
            {
                internalType: "contract IFoxifyAffiliation",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "borrowingFees",
        outputs: [
            {
                internalType: "contract IBorrowingFees",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "canExecuteTimeout",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "orderId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "spreadP",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingCallbacks.AggregatorAnswer",
                name: "a",
                type: "tuple",
            },
        ],
        name: "closeTradeMarketCallback",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "done",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "orderId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "spreadP",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingCallbacks.AggregatorAnswer",
                name: "a",
                type: "tuple",
            },
        ],
        name: "executeBotCloseOrderCallback",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "orderId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "spreadP",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingCallbacks.AggregatorAnswer",
                name: "a",
                type: "tuple",
            },
        ],
        name: "executeBotOpenOrderCallback",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getAllPairsMaxLeverage",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract ITradingStorage",
                name: "_storageT",
                type: "address",
            },
            {
                internalType: "contract IOrderExecutionTokenManagement",
                name: "_orderTokenManagement",
                type: "address",
            },
            {
                internalType: "contract IPairInfos",
                name: "_pairInfos",
                type: "address",
            },
            {
                internalType: "address",
                name: "_workPoolToApprove",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_canExecuteTimeout",
                type: "uint256",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IBorrowingFees",
                name: "_borrowingFees",
                type: "address",
            },
        ],
        name: "initializeV2",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "isDone",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "isPaused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "orderId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "spreadP",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingCallbacks.AggregatorAnswer",
                name: "a",
                type: "tuple",
            },
        ],
        name: "openTradeMarketCallback",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "orderTokenManagement",
        outputs: [
            {
                internalType: "contract IOrderExecutionTokenManagement",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pairInfos",
        outputs: [
            {
                internalType: "contract IPairInfos",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "pairMaxLeverage",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "referral",
        outputs: [
            {
                internalType: "contract IFoxifyReferral",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_affiliation",
                type: "address",
            },
        ],
        name: "setAffiliation",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_canExecuteTimeout",
                type: "uint256",
            },
        ],
        name: "setCanExecuteTimeout",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxLeverage",
                type: "uint256",
            },
        ],
        name: "setPairMaxLeverage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "indices",
                type: "uint256[]",
            },
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "setPairMaxLeverageArray",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_referral",
                type: "address",
            },
        ],
        name: "setReferral",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "enum TradingCallbacks.TradeType",
                        name: "tradeType",
                        type: "uint8",
                    },
                ],
                internalType: "struct TradingCallbacks.SimplifiedTradeId",
                name: "_id",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "tp",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "sl",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "limit",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "created",
                        type: "uint32",
                    },
                ],
                internalType: "struct TradingCallbacks.LastUpdated",
                name: "_lastUpdated",
                type: "tuple",
            },
        ],
        name: "setTradeLastUpdated",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "storageT",
        outputs: [
            {
                internalType: "contract ITradingStorage",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "enum TradingCallbacks.TradeType",
                name: "",
                type: "uint8",
            },
        ],
        name: "tradeLastUpdated",
        outputs: [
            {
                internalType: "uint32",
                name: "tp",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "sl",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "limit",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "created",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "orderId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "spreadP",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingCallbacks.AggregatorAnswer",
                name: "a",
                type: "tuple",
            },
        ],
        name: "updateSlCallback",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class Callbacks__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Callbacks__factory = Callbacks__factory;
Callbacks__factory.abi = _abi;
