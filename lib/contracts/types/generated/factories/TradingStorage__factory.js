"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TradingStorage__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                indexed: false,
                internalType: "address",
                name: "a",
                type: "address",
            },
        ],
        name: "AddressUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "NumberUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "NumberUpdatedPair",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256[5]",
                name: "",
                type: "uint256[5]",
            },
        ],
        name: "SpreadReductionsUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "a",
                type: "address",
            },
        ],
        name: "SupportedTokenAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "a",
                type: "address",
            },
        ],
        name: "TradingContractAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "a",
                type: "address",
            },
        ],
        name: "TradingContractRemoved",
        type: "event",
    },
    {
        inputs: [],
        name: "PRECISION",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_token",
                type: "address",
            },
        ],
        name: "addSupportedToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_trading",
                type: "address",
            },
        ],
        name: "addTradingContract",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "callbacks",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "claimFees",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "dev",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "devFeesStable",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
        ],
        name: "firstEmptyOpenLimitIndex",
        outputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
        ],
        name: "firstEmptyTradeIndex",
        outputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_trader",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_pairIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "getOpenLimitOrder",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSize",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "block",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingStorage.OpenLimitOrder",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getOpenLimitOrders",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSize",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "block",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingStorage.OpenLimitOrder[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_trader",
                type: "address",
            },
        ],
        name: "getPendingOrderIds",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getSupportedTokens",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "gov",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "govFeesStable",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pairIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_leveragedPositionSize",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "_isRef",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_fullFee",
                type: "bool",
            },
        ],
        name: "handleDevGovRefFees",
        outputs: [
            {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "hasOpenLimitOrder",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract TokenInterface",
                name: "_stable",
                type: "address",
            },
            {
                internalType: "contract TokenInterface",
                name: "_linkErc677",
                type: "address",
            },
            {
                internalType: "contract IOrderExecutionTokenManagement",
                name: "_orderTokenManagement",
                type: "address",
            },
            {
                internalType: "address",
                name: "_gov",
                type: "address",
            },
            {
                internalType: "address",
                name: "_dev",
                type: "address",
            },
            {
                internalType: "address",
                name: "_ref",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "isTradingContract",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "linkErc677",
        outputs: [
            {
                internalType: "contract TokenInterface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "maxPendingMarketOrders",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "maxTradesPerPair",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "openInterestStable",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "openLimitOrderIds",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "openLimitOrders",
        outputs: [
            {
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "positionSize",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "buy",
                type: "bool",
            },
            {
                internalType: "uint256",
                name: "leverage",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "tp",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "sl",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "minPrice",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxPrice",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "block",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "openLimitOrdersCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "openTrades",
        outputs: [
            {
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "positionSizeStable",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "openPrice",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "buy",
                type: "bool",
            },
            {
                internalType: "uint256",
                name: "leverage",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "tp",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "sl",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "openTradesCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "openTradesInfo",
        outputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "openInterestStable",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "tpLastUpdated",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "slLastUpdated",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "beingMarketClosed",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "orderTokenManagement",
        outputs: [
            {
                internalType: "contract IOrderExecutionTokenManagement",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "pairTraders",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pairIndex",
                type: "uint256",
            },
        ],
        name: "pairTradersArray",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "pairTradersId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "pendingMarketCloseCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "pendingMarketOpenCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "pendingOrderIds",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_trader",
                type: "address",
            },
        ],
        name: "pendingOrderIdsCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "priceAggregator",
        outputs: [
            {
                internalType: "contract IAggregator01",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "ref",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "refFeesStable",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_trading",
                type: "address",
            },
        ],
        name: "removeTradingContract",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "reqID_pendingBotOrder",
        outputs: [
            {
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
            {
                internalType: "enum TradingStorage.LimitOrder",
                name: "orderType",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "reqID_pendingMarketOrder",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSizeStable",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "openPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingStorage.Trade",
                name: "trade",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "block",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "wantedPrice",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "slippageP",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_callbacks",
                type: "address",
            },
        ],
        name: "setCallbacks",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_dev",
                type: "address",
            },
        ],
        name: "setDev",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_gov",
                type: "address",
            },
        ],
        name: "setGov",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pairIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_newMaxOpenInterest",
                type: "uint256",
            },
        ],
        name: "setMaxOpenInterestStable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_maxPendingMarketOrders",
                type: "uint256",
            },
        ],
        name: "setMaxPendingMarketOrders",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_maxTradesPerPair",
                type: "uint256",
            },
        ],
        name: "setMaxTradesPerPair",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_orderTokenManagement",
                type: "address",
            },
        ],
        name: "setOrderTokenManagement",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_aggregator",
                type: "address",
            },
        ],
        name: "setPriceAggregator",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_ref",
                type: "address",
            },
        ],
        name: "setRef",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_trading",
                type: "address",
            },
        ],
        name: "setTrading",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_workPool",
                type: "address",
            },
        ],
        name: "setWorkPool",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "stable",
        outputs: [
            {
                internalType: "contract TokenInterface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSize",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "block",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingStorage.OpenLimitOrder",
                name: "o",
                type: "tuple",
            },
        ],
        name: "storeOpenLimitOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "enum TradingStorage.LimitOrder",
                        name: "orderType",
                        type: "uint8",
                    },
                ],
                internalType: "struct TradingStorage.PendingBotOrder",
                name: "_botOrder",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "_orderId",
                type: "uint256",
            },
        ],
        name: "storePendingBotOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "trader",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "pairIndex",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "index",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "positionSizeStable",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "openPrice",
                                type: "uint256",
                            },
                            {
                                internalType: "bool",
                                name: "buy",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "leverage",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "tp",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "sl",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct TradingStorage.Trade",
                        name: "trade",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "block",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "wantedPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "slippageP",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingStorage.PendingMarketOrder",
                name: "_order",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "_id",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "_open",
                type: "bool",
            },
        ],
        name: "storePendingMarketOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSizeStable",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "openPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingStorage.Trade",
                name: "_trade",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "openInterestStable",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tpLastUpdated",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "slLastUpdated",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "beingMarketClosed",
                        type: "bool",
                    },
                ],
                internalType: "struct TradingStorage.TradeInfo",
                name: "_tradeInfo",
                type: "tuple",
            },
        ],
        name: "storeTrade",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "supportedTokens",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "trading",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_from",
                type: "address",
            },
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "transferStable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_trader",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_pairIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
        ],
        name: "unregisterOpenLimitOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_order",
                type: "uint256",
            },
        ],
        name: "unregisterPendingBotOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_id",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "_open",
                type: "bool",
            },
        ],
        name: "unregisterPendingMarketOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "trader",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "pairIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "unregisterTrade",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSize",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "maxPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "block",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingStorage.OpenLimitOrder",
                name: "_o",
                type: "tuple",
            },
        ],
        name: "updateOpenLimitOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_trader",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_pairIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_newSl",
                type: "uint256",
            },
        ],
        name: "updateSl",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_trader",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_pairIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_index",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_newTp",
                type: "uint256",
            },
        ],
        name: "updateTp",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "pairIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "positionSizeStable",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "openPrice",
                        type: "uint256",
                    },
                    {
                        internalType: "bool",
                        name: "buy",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "leverage",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sl",
                        type: "uint256",
                    },
                ],
                internalType: "struct TradingStorage.Trade",
                name: "_t",
                type: "tuple",
            },
        ],
        name: "updateTrade",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "workPool",
        outputs: [
            {
                internalType: "contract IWorkPool",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class TradingStorage__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TradingStorage__factory = TradingStorage__factory;
TradingStorage__factory.abi = _abi;
